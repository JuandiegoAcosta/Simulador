//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sistema_Bancario.WsSistemaBancario {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.ICobroChequeService")]
    public interface ICobroChequeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobroChequeService/CobroCheque_Crear", ReplyAction="http://tempuri.org/ICobroChequeService/CobroCheque_CrearResponse")]
        bool CobroCheque_Crear(Modelos.Modelos.CobroChequesModel aCobroCheque);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobroChequeService/CobroCheque_Crear", ReplyAction="http://tempuri.org/ICobroChequeService/CobroCheque_CrearResponse")]
        System.Threading.Tasks.Task<bool> CobroCheque_CrearAsync(Modelos.Modelos.CobroChequesModel aCobroCheque);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobroChequeService/CobroCheque_Editar", ReplyAction="http://tempuri.org/ICobroChequeService/CobroCheque_EditarResponse")]
        bool CobroCheque_Editar(Modelos.Modelos.CobroChequesModel aCobroCheque);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobroChequeService/CobroCheque_Editar", ReplyAction="http://tempuri.org/ICobroChequeService/CobroCheque_EditarResponse")]
        System.Threading.Tasks.Task<bool> CobroCheque_EditarAsync(Modelos.Modelos.CobroChequesModel aCobroCheque);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobroChequeService/CobroCheque_Eliminar", ReplyAction="http://tempuri.org/ICobroChequeService/CobroCheque_EliminarResponse")]
        bool CobroCheque_Eliminar(int aID_Cheque, int aID_Movimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobroChequeService/CobroCheque_Eliminar", ReplyAction="http://tempuri.org/ICobroChequeService/CobroCheque_EliminarResponse")]
        System.Threading.Tasks.Task<bool> CobroCheque_EliminarAsync(int aID_Cheque, int aID_Movimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobroChequeService/CobroCheque_ObtenerUno", ReplyAction="http://tempuri.org/ICobroChequeService/CobroCheque_ObtenerUnoResponse")]
        Modelos.Modelos.CobroChequesModel CobroCheque_ObtenerUno(int aID_Cheque, int aID_Movimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobroChequeService/CobroCheque_ObtenerUno", ReplyAction="http://tempuri.org/ICobroChequeService/CobroCheque_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.CobroChequesModel> CobroCheque_ObtenerUnoAsync(int aID_Cheque, int aID_Movimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobroChequeService/CobroCheque_ObtenerTodos", ReplyAction="http://tempuri.org/ICobroChequeService/CobroCheque_ObtenerTodosResponse")]
        Modelos.Modelos.CobroChequesModel[] CobroCheque_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICobroChequeService/CobroCheque_ObtenerTodos", ReplyAction="http://tempuri.org/ICobroChequeService/CobroCheque_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.CobroChequesModel[]> CobroCheque_ObtenerTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICobroChequeServiceChannel : Sistema_Bancario.WsSistemaBancario.ICobroChequeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CobroChequeServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.ICobroChequeService>, Sistema_Bancario.WsSistemaBancario.ICobroChequeService {
        
        public CobroChequeServiceClient() {
        }
        
        public CobroChequeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CobroChequeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CobroChequeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CobroChequeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CobroCheque_Crear(Modelos.Modelos.CobroChequesModel aCobroCheque) {
            return base.Channel.CobroCheque_Crear(aCobroCheque);
        }
        
        public System.Threading.Tasks.Task<bool> CobroCheque_CrearAsync(Modelos.Modelos.CobroChequesModel aCobroCheque) {
            return base.Channel.CobroCheque_CrearAsync(aCobroCheque);
        }
        
        public bool CobroCheque_Editar(Modelos.Modelos.CobroChequesModel aCobroCheque) {
            return base.Channel.CobroCheque_Editar(aCobroCheque);
        }
        
        public System.Threading.Tasks.Task<bool> CobroCheque_EditarAsync(Modelos.Modelos.CobroChequesModel aCobroCheque) {
            return base.Channel.CobroCheque_EditarAsync(aCobroCheque);
        }
        
        public bool CobroCheque_Eliminar(int aID_Cheque, int aID_Movimiento) {
            return base.Channel.CobroCheque_Eliminar(aID_Cheque, aID_Movimiento);
        }
        
        public System.Threading.Tasks.Task<bool> CobroCheque_EliminarAsync(int aID_Cheque, int aID_Movimiento) {
            return base.Channel.CobroCheque_EliminarAsync(aID_Cheque, aID_Movimiento);
        }
        
        public Modelos.Modelos.CobroChequesModel CobroCheque_ObtenerUno(int aID_Cheque, int aID_Movimiento) {
            return base.Channel.CobroCheque_ObtenerUno(aID_Cheque, aID_Movimiento);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.CobroChequesModel> CobroCheque_ObtenerUnoAsync(int aID_Cheque, int aID_Movimiento) {
            return base.Channel.CobroCheque_ObtenerUnoAsync(aID_Cheque, aID_Movimiento);
        }
        
        public Modelos.Modelos.CobroChequesModel[] CobroCheque_ObtenerTodos() {
            return base.Channel.CobroCheque_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.CobroChequesModel[]> CobroCheque_ObtenerTodosAsync() {
            return base.Channel.CobroCheque_ObtenerTodosAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.IEmpresaService")]
    public interface IEmpresaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresaService/Empresa_Crear", ReplyAction="http://tempuri.org/IEmpresaService/Empresa_CrearResponse")]
        bool Empresa_Crear(Modelos.Modelos.EmpresaModel aEmpresaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresaService/Empresa_Crear", ReplyAction="http://tempuri.org/IEmpresaService/Empresa_CrearResponse")]
        System.Threading.Tasks.Task<bool> Empresa_CrearAsync(Modelos.Modelos.EmpresaModel aEmpresaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresaService/Empresa_Editar", ReplyAction="http://tempuri.org/IEmpresaService/Empresa_EditarResponse")]
        bool Empresa_Editar(Modelos.Modelos.EmpresaModel aEmpresaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresaService/Empresa_Editar", ReplyAction="http://tempuri.org/IEmpresaService/Empresa_EditarResponse")]
        System.Threading.Tasks.Task<bool> Empresa_EditarAsync(Modelos.Modelos.EmpresaModel aEmpresaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresaService/Empresa_Eliminar", ReplyAction="http://tempuri.org/IEmpresaService/Empresa_EliminarResponse")]
        bool Empresa_Eliminar(int aID_EmpresaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresaService/Empresa_Eliminar", ReplyAction="http://tempuri.org/IEmpresaService/Empresa_EliminarResponse")]
        System.Threading.Tasks.Task<bool> Empresa_EliminarAsync(int aID_EmpresaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresaService/Empresa_ObtenerUno", ReplyAction="http://tempuri.org/IEmpresaService/Empresa_ObtenerUnoResponse")]
        Modelos.Modelos.EmpresaModel Empresa_ObtenerUno(int aID_EmpresaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresaService/Empresa_ObtenerUno", ReplyAction="http://tempuri.org/IEmpresaService/Empresa_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.EmpresaModel> Empresa_ObtenerUnoAsync(int aID_EmpresaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresaService/Empresa_ObtenerTodos", ReplyAction="http://tempuri.org/IEmpresaService/Empresa_ObtenerTodosResponse")]
        Modelos.Modelos.EmpresaModel[] Empresa_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpresaService/Empresa_ObtenerTodos", ReplyAction="http://tempuri.org/IEmpresaService/Empresa_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.EmpresaModel[]> Empresa_ObtenerTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmpresaServiceChannel : Sistema_Bancario.WsSistemaBancario.IEmpresaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmpresaServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.IEmpresaService>, Sistema_Bancario.WsSistemaBancario.IEmpresaService {
        
        public EmpresaServiceClient() {
        }
        
        public EmpresaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmpresaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpresaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpresaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Empresa_Crear(Modelos.Modelos.EmpresaModel aEmpresaModel) {
            return base.Channel.Empresa_Crear(aEmpresaModel);
        }
        
        public System.Threading.Tasks.Task<bool> Empresa_CrearAsync(Modelos.Modelos.EmpresaModel aEmpresaModel) {
            return base.Channel.Empresa_CrearAsync(aEmpresaModel);
        }
        
        public bool Empresa_Editar(Modelos.Modelos.EmpresaModel aEmpresaModel) {
            return base.Channel.Empresa_Editar(aEmpresaModel);
        }
        
        public System.Threading.Tasks.Task<bool> Empresa_EditarAsync(Modelos.Modelos.EmpresaModel aEmpresaModel) {
            return base.Channel.Empresa_EditarAsync(aEmpresaModel);
        }
        
        public bool Empresa_Eliminar(int aID_EmpresaModel) {
            return base.Channel.Empresa_Eliminar(aID_EmpresaModel);
        }
        
        public System.Threading.Tasks.Task<bool> Empresa_EliminarAsync(int aID_EmpresaModel) {
            return base.Channel.Empresa_EliminarAsync(aID_EmpresaModel);
        }
        
        public Modelos.Modelos.EmpresaModel Empresa_ObtenerUno(int aID_EmpresaModel) {
            return base.Channel.Empresa_ObtenerUno(aID_EmpresaModel);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.EmpresaModel> Empresa_ObtenerUnoAsync(int aID_EmpresaModel) {
            return base.Channel.Empresa_ObtenerUnoAsync(aID_EmpresaModel);
        }
        
        public Modelos.Modelos.EmpresaModel[] Empresa_ObtenerTodos() {
            return base.Channel.Empresa_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.EmpresaModel[]> Empresa_ObtenerTodosAsync() {
            return base.Channel.Empresa_ObtenerTodosAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.IPagoServicioService")]
    public interface IPagoServicioService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPagoServicioService/PagoServicio_Crear", ReplyAction="http://tempuri.org/IPagoServicioService/PagoServicio_CrearResponse")]
        bool PagoServicio_Crear(Modelos.Modelos.PagoServiciosModel aPagoServicios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPagoServicioService/PagoServicio_Crear", ReplyAction="http://tempuri.org/IPagoServicioService/PagoServicio_CrearResponse")]
        System.Threading.Tasks.Task<bool> PagoServicio_CrearAsync(Modelos.Modelos.PagoServiciosModel aPagoServicios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPagoServicioService/PagoServicio_Editar", ReplyAction="http://tempuri.org/IPagoServicioService/PagoServicio_EditarResponse")]
        bool PagoServicio_Editar(Modelos.Modelos.PagoServiciosModel aPagoServicios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPagoServicioService/PagoServicio_Editar", ReplyAction="http://tempuri.org/IPagoServicioService/PagoServicio_EditarResponse")]
        System.Threading.Tasks.Task<bool> PagoServicio_EditarAsync(Modelos.Modelos.PagoServiciosModel aPagoServicios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPagoServicioService/PagoServicio_Eliminar", ReplyAction="http://tempuri.org/IPagoServicioService/PagoServicio_EliminarResponse")]
        bool PagoServicio_Eliminar(int aNro_Contrato, int aID_Movimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPagoServicioService/PagoServicio_Eliminar", ReplyAction="http://tempuri.org/IPagoServicioService/PagoServicio_EliminarResponse")]
        System.Threading.Tasks.Task<bool> PagoServicio_EliminarAsync(int aNro_Contrato, int aID_Movimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPagoServicioService/PagoServicio_ObtenerUno", ReplyAction="http://tempuri.org/IPagoServicioService/PagoServicio_ObtenerUnoResponse")]
        Modelos.Modelos.PagoServiciosModel PagoServicio_ObtenerUno(int aNro_Contrato, int aID_Movimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPagoServicioService/PagoServicio_ObtenerUno", ReplyAction="http://tempuri.org/IPagoServicioService/PagoServicio_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.PagoServiciosModel> PagoServicio_ObtenerUnoAsync(int aNro_Contrato, int aID_Movimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPagoServicioService/PagoServicio_ObtenerTodos", ReplyAction="http://tempuri.org/IPagoServicioService/PagoServicio_ObtenerTodosResponse")]
        Modelos.Modelos.PagoServiciosModel[] PagoServicio_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPagoServicioService/PagoServicio_ObtenerTodos", ReplyAction="http://tempuri.org/IPagoServicioService/PagoServicio_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.PagoServiciosModel[]> PagoServicio_ObtenerTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPagoServicioServiceChannel : Sistema_Bancario.WsSistemaBancario.IPagoServicioService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PagoServicioServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.IPagoServicioService>, Sistema_Bancario.WsSistemaBancario.IPagoServicioService {
        
        public PagoServicioServiceClient() {
        }
        
        public PagoServicioServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PagoServicioServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PagoServicioServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PagoServicioServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool PagoServicio_Crear(Modelos.Modelos.PagoServiciosModel aPagoServicios) {
            return base.Channel.PagoServicio_Crear(aPagoServicios);
        }
        
        public System.Threading.Tasks.Task<bool> PagoServicio_CrearAsync(Modelos.Modelos.PagoServiciosModel aPagoServicios) {
            return base.Channel.PagoServicio_CrearAsync(aPagoServicios);
        }
        
        public bool PagoServicio_Editar(Modelos.Modelos.PagoServiciosModel aPagoServicios) {
            return base.Channel.PagoServicio_Editar(aPagoServicios);
        }
        
        public System.Threading.Tasks.Task<bool> PagoServicio_EditarAsync(Modelos.Modelos.PagoServiciosModel aPagoServicios) {
            return base.Channel.PagoServicio_EditarAsync(aPagoServicios);
        }
        
        public bool PagoServicio_Eliminar(int aNro_Contrato, int aID_Movimiento) {
            return base.Channel.PagoServicio_Eliminar(aNro_Contrato, aID_Movimiento);
        }
        
        public System.Threading.Tasks.Task<bool> PagoServicio_EliminarAsync(int aNro_Contrato, int aID_Movimiento) {
            return base.Channel.PagoServicio_EliminarAsync(aNro_Contrato, aID_Movimiento);
        }
        
        public Modelos.Modelos.PagoServiciosModel PagoServicio_ObtenerUno(int aNro_Contrato, int aID_Movimiento) {
            return base.Channel.PagoServicio_ObtenerUno(aNro_Contrato, aID_Movimiento);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.PagoServiciosModel> PagoServicio_ObtenerUnoAsync(int aNro_Contrato, int aID_Movimiento) {
            return base.Channel.PagoServicio_ObtenerUnoAsync(aNro_Contrato, aID_Movimiento);
        }
        
        public Modelos.Modelos.PagoServiciosModel[] PagoServicio_ObtenerTodos() {
            return base.Channel.PagoServicio_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.PagoServiciosModel[]> PagoServicio_ObtenerTodosAsync() {
            return base.Channel.PagoServicio_ObtenerTodosAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.IRecaudosService")]
    public interface IRecaudosService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecaudosService/Recaudos_Crear", ReplyAction="http://tempuri.org/IRecaudosService/Recaudos_CrearResponse")]
        bool Recaudos_Crear(Modelos.Modelos.RecaudosModel aRecaudos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecaudosService/Recaudos_Crear", ReplyAction="http://tempuri.org/IRecaudosService/Recaudos_CrearResponse")]
        System.Threading.Tasks.Task<bool> Recaudos_CrearAsync(Modelos.Modelos.RecaudosModel aRecaudos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecaudosService/Recaudos_Editar", ReplyAction="http://tempuri.org/IRecaudosService/Recaudos_EditarResponse")]
        bool Recaudos_Editar(Modelos.Modelos.RecaudosModel aRecaudos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecaudosService/Recaudos_Editar", ReplyAction="http://tempuri.org/IRecaudosService/Recaudos_EditarResponse")]
        System.Threading.Tasks.Task<bool> Recaudos_EditarAsync(Modelos.Modelos.RecaudosModel aRecaudos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecaudosService/Recaudos_Eliminar", ReplyAction="http://tempuri.org/IRecaudosService/Recaudos_EliminarResponse")]
        bool Recaudos_Eliminar(int aNro_Contrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecaudosService/Recaudos_Eliminar", ReplyAction="http://tempuri.org/IRecaudosService/Recaudos_EliminarResponse")]
        System.Threading.Tasks.Task<bool> Recaudos_EliminarAsync(int aNro_Contrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecaudosService/Recaudos_ObtenerUno", ReplyAction="http://tempuri.org/IRecaudosService/Recaudos_ObtenerUnoResponse")]
        Modelos.Modelos.RecaudosModel Recaudos_ObtenerUno(int aNro_Contrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecaudosService/Recaudos_ObtenerUno", ReplyAction="http://tempuri.org/IRecaudosService/Recaudos_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.RecaudosModel> Recaudos_ObtenerUnoAsync(int aNro_Contrato);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecaudosService/Recaudos_ObtenerTodos", ReplyAction="http://tempuri.org/IRecaudosService/Recaudos_ObtenerTodosResponse")]
        Modelos.Modelos.RecaudosModel[] Recaudos_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRecaudosService/Recaudos_ObtenerTodos", ReplyAction="http://tempuri.org/IRecaudosService/Recaudos_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.RecaudosModel[]> Recaudos_ObtenerTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRecaudosServiceChannel : Sistema_Bancario.WsSistemaBancario.IRecaudosService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecaudosServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.IRecaudosService>, Sistema_Bancario.WsSistemaBancario.IRecaudosService {
        
        public RecaudosServiceClient() {
        }
        
        public RecaudosServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RecaudosServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecaudosServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RecaudosServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Recaudos_Crear(Modelos.Modelos.RecaudosModel aRecaudos) {
            return base.Channel.Recaudos_Crear(aRecaudos);
        }
        
        public System.Threading.Tasks.Task<bool> Recaudos_CrearAsync(Modelos.Modelos.RecaudosModel aRecaudos) {
            return base.Channel.Recaudos_CrearAsync(aRecaudos);
        }
        
        public bool Recaudos_Editar(Modelos.Modelos.RecaudosModel aRecaudos) {
            return base.Channel.Recaudos_Editar(aRecaudos);
        }
        
        public System.Threading.Tasks.Task<bool> Recaudos_EditarAsync(Modelos.Modelos.RecaudosModel aRecaudos) {
            return base.Channel.Recaudos_EditarAsync(aRecaudos);
        }
        
        public bool Recaudos_Eliminar(int aNro_Contrato) {
            return base.Channel.Recaudos_Eliminar(aNro_Contrato);
        }
        
        public System.Threading.Tasks.Task<bool> Recaudos_EliminarAsync(int aNro_Contrato) {
            return base.Channel.Recaudos_EliminarAsync(aNro_Contrato);
        }
        
        public Modelos.Modelos.RecaudosModel Recaudos_ObtenerUno(int aNro_Contrato) {
            return base.Channel.Recaudos_ObtenerUno(aNro_Contrato);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.RecaudosModel> Recaudos_ObtenerUnoAsync(int aNro_Contrato) {
            return base.Channel.Recaudos_ObtenerUnoAsync(aNro_Contrato);
        }
        
        public Modelos.Modelos.RecaudosModel[] Recaudos_ObtenerTodos() {
            return base.Channel.Recaudos_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.RecaudosModel[]> Recaudos_ObtenerTodosAsync() {
            return base.Channel.Recaudos_ObtenerTodosAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.ITipoMonedaService")]
    public interface ITipoMonedaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMonedaService/Moneda_Crear", ReplyAction="http://tempuri.org/ITipoMonedaService/Moneda_CrearResponse")]
        bool Moneda_Crear(Modelos.Modelos.TipoMonedaModel aTipoMonedaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMonedaService/Moneda_Crear", ReplyAction="http://tempuri.org/ITipoMonedaService/Moneda_CrearResponse")]
        System.Threading.Tasks.Task<bool> Moneda_CrearAsync(Modelos.Modelos.TipoMonedaModel aTipoMonedaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMonedaService/Moneda_Editar", ReplyAction="http://tempuri.org/ITipoMonedaService/Moneda_EditarResponse")]
        bool Moneda_Editar(Modelos.Modelos.TipoMonedaModel aTipoMonedaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMonedaService/Moneda_Editar", ReplyAction="http://tempuri.org/ITipoMonedaService/Moneda_EditarResponse")]
        System.Threading.Tasks.Task<bool> Moneda_EditarAsync(Modelos.Modelos.TipoMonedaModel aTipoMonedaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMonedaService/Moneda_Eliminar", ReplyAction="http://tempuri.org/ITipoMonedaService/Moneda_EliminarResponse")]
        bool Moneda_Eliminar(int aID_TipoMonedaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMonedaService/Moneda_Eliminar", ReplyAction="http://tempuri.org/ITipoMonedaService/Moneda_EliminarResponse")]
        System.Threading.Tasks.Task<bool> Moneda_EliminarAsync(int aID_TipoMonedaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMonedaService/Moneda_ObtenerUno", ReplyAction="http://tempuri.org/ITipoMonedaService/Moneda_ObtenerUnoResponse")]
        Modelos.Modelos.TipoMonedaModel Moneda_ObtenerUno(int aID_TipoMonedaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMonedaService/Moneda_ObtenerUno", ReplyAction="http://tempuri.org/ITipoMonedaService/Moneda_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.TipoMonedaModel> Moneda_ObtenerUnoAsync(int aID_TipoMonedaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMonedaService/Moneda_ObtenerTodos", ReplyAction="http://tempuri.org/ITipoMonedaService/Moneda_ObtenerTodosResponse")]
        Modelos.Modelos.TipoMonedaModel[] Moneda_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMonedaService/Moneda_ObtenerTodos", ReplyAction="http://tempuri.org/ITipoMonedaService/Moneda_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.TipoMonedaModel[]> Moneda_ObtenerTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITipoMonedaServiceChannel : Sistema_Bancario.WsSistemaBancario.ITipoMonedaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TipoMonedaServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.ITipoMonedaService>, Sistema_Bancario.WsSistemaBancario.ITipoMonedaService {
        
        public TipoMonedaServiceClient() {
        }
        
        public TipoMonedaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TipoMonedaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TipoMonedaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TipoMonedaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Moneda_Crear(Modelos.Modelos.TipoMonedaModel aTipoMonedaModel) {
            return base.Channel.Moneda_Crear(aTipoMonedaModel);
        }
        
        public System.Threading.Tasks.Task<bool> Moneda_CrearAsync(Modelos.Modelos.TipoMonedaModel aTipoMonedaModel) {
            return base.Channel.Moneda_CrearAsync(aTipoMonedaModel);
        }
        
        public bool Moneda_Editar(Modelos.Modelos.TipoMonedaModel aTipoMonedaModel) {
            return base.Channel.Moneda_Editar(aTipoMonedaModel);
        }
        
        public System.Threading.Tasks.Task<bool> Moneda_EditarAsync(Modelos.Modelos.TipoMonedaModel aTipoMonedaModel) {
            return base.Channel.Moneda_EditarAsync(aTipoMonedaModel);
        }
        
        public bool Moneda_Eliminar(int aID_TipoMonedaModel) {
            return base.Channel.Moneda_Eliminar(aID_TipoMonedaModel);
        }
        
        public System.Threading.Tasks.Task<bool> Moneda_EliminarAsync(int aID_TipoMonedaModel) {
            return base.Channel.Moneda_EliminarAsync(aID_TipoMonedaModel);
        }
        
        public Modelos.Modelos.TipoMonedaModel Moneda_ObtenerUno(int aID_TipoMonedaModel) {
            return base.Channel.Moneda_ObtenerUno(aID_TipoMonedaModel);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.TipoMonedaModel> Moneda_ObtenerUnoAsync(int aID_TipoMonedaModel) {
            return base.Channel.Moneda_ObtenerUnoAsync(aID_TipoMonedaModel);
        }
        
        public Modelos.Modelos.TipoMonedaModel[] Moneda_ObtenerTodos() {
            return base.Channel.Moneda_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.TipoMonedaModel[]> Moneda_ObtenerTodosAsync() {
            return base.Channel.Moneda_ObtenerTodosAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.ITipoMovimientoService")]
    public interface ITipoMovimientoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_Crear", ReplyAction="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_CrearResponse")]
        bool TipoMovimiento_Crear(Modelos.Modelos.MovimientosVentanillaModel aMovimientoVentanilla);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_Crear", ReplyAction="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_CrearResponse")]
        System.Threading.Tasks.Task<bool> TipoMovimiento_CrearAsync(Modelos.Modelos.MovimientosVentanillaModel aMovimientoVentanilla);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_Editar", ReplyAction="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_EditarResponse")]
        bool TipoMovimiento_Editar(Modelos.Modelos.MovimientosVentanillaModel aMovimientoVentanilla);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_Editar", ReplyAction="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_EditarResponse")]
        System.Threading.Tasks.Task<bool> TipoMovimiento_EditarAsync(Modelos.Modelos.MovimientosVentanillaModel aMovimientoVentanilla);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_Eliminar", ReplyAction="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_EliminarResponse")]
        bool TipoMovimiento_Eliminar(int aID_Movimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_Eliminar", ReplyAction="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_EliminarResponse")]
        System.Threading.Tasks.Task<bool> TipoMovimiento_EliminarAsync(int aID_Movimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_ObtenerUno", ReplyAction="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_ObtenerUnoResponse")]
        Modelos.Modelos.MovimientosVentanillaModel TipoMovimiento_ObtenerUno(int aID_Movimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_ObtenerUno", ReplyAction="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.MovimientosVentanillaModel> TipoMovimiento_ObtenerUnoAsync(int aID_Movimiento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_ObtenerTodos", ReplyAction="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_ObtenerTodosResponse")]
        Modelos.Modelos.MovimientosVentanillaModel[] TipoMovimiento_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_ObtenerTodos", ReplyAction="http://tempuri.org/ITipoMovimientoService/TipoMovimiento_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.MovimientosVentanillaModel[]> TipoMovimiento_ObtenerTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITipoMovimientoServiceChannel : Sistema_Bancario.WsSistemaBancario.ITipoMovimientoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TipoMovimientoServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.ITipoMovimientoService>, Sistema_Bancario.WsSistemaBancario.ITipoMovimientoService {
        
        public TipoMovimientoServiceClient() {
        }
        
        public TipoMovimientoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TipoMovimientoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TipoMovimientoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TipoMovimientoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool TipoMovimiento_Crear(Modelos.Modelos.MovimientosVentanillaModel aMovimientoVentanilla) {
            return base.Channel.TipoMovimiento_Crear(aMovimientoVentanilla);
        }
        
        public System.Threading.Tasks.Task<bool> TipoMovimiento_CrearAsync(Modelos.Modelos.MovimientosVentanillaModel aMovimientoVentanilla) {
            return base.Channel.TipoMovimiento_CrearAsync(aMovimientoVentanilla);
        }
        
        public bool TipoMovimiento_Editar(Modelos.Modelos.MovimientosVentanillaModel aMovimientoVentanilla) {
            return base.Channel.TipoMovimiento_Editar(aMovimientoVentanilla);
        }
        
        public System.Threading.Tasks.Task<bool> TipoMovimiento_EditarAsync(Modelos.Modelos.MovimientosVentanillaModel aMovimientoVentanilla) {
            return base.Channel.TipoMovimiento_EditarAsync(aMovimientoVentanilla);
        }
        
        public bool TipoMovimiento_Eliminar(int aID_Movimiento) {
            return base.Channel.TipoMovimiento_Eliminar(aID_Movimiento);
        }
        
        public System.Threading.Tasks.Task<bool> TipoMovimiento_EliminarAsync(int aID_Movimiento) {
            return base.Channel.TipoMovimiento_EliminarAsync(aID_Movimiento);
        }
        
        public Modelos.Modelos.MovimientosVentanillaModel TipoMovimiento_ObtenerUno(int aID_Movimiento) {
            return base.Channel.TipoMovimiento_ObtenerUno(aID_Movimiento);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.MovimientosVentanillaModel> TipoMovimiento_ObtenerUnoAsync(int aID_Movimiento) {
            return base.Channel.TipoMovimiento_ObtenerUnoAsync(aID_Movimiento);
        }
        
        public Modelos.Modelos.MovimientosVentanillaModel[] TipoMovimiento_ObtenerTodos() {
            return base.Channel.TipoMovimiento_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.MovimientosVentanillaModel[]> TipoMovimiento_ObtenerTodosAsync() {
            return base.Channel.TipoMovimiento_ObtenerTodosAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.IVentanillaService")]
    public interface IVentanillaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentanillaService/Ventanilla_Crear", ReplyAction="http://tempuri.org/IVentanillaService/Ventanilla_CrearResponse")]
        bool Ventanilla_Crear(Modelos.Modelos.VentanillaModel aVentanilla);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentanillaService/Ventanilla_Crear", ReplyAction="http://tempuri.org/IVentanillaService/Ventanilla_CrearResponse")]
        System.Threading.Tasks.Task<bool> Ventanilla_CrearAsync(Modelos.Modelos.VentanillaModel aVentanilla);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentanillaService/Ventanilla_Editar", ReplyAction="http://tempuri.org/IVentanillaService/Ventanilla_EditarResponse")]
        bool Ventanilla_Editar(Modelos.Modelos.VentanillaModel aVentanilla);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentanillaService/Ventanilla_Editar", ReplyAction="http://tempuri.org/IVentanillaService/Ventanilla_EditarResponse")]
        System.Threading.Tasks.Task<bool> Ventanilla_EditarAsync(Modelos.Modelos.VentanillaModel aVentanilla);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentanillaService/Ventanilla_Eliminar", ReplyAction="http://tempuri.org/IVentanillaService/Ventanilla_EliminarResponse")]
        bool Ventanilla_Eliminar(int aID_VentanillaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentanillaService/Ventanilla_Eliminar", ReplyAction="http://tempuri.org/IVentanillaService/Ventanilla_EliminarResponse")]
        System.Threading.Tasks.Task<bool> Ventanilla_EliminarAsync(int aID_VentanillaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentanillaService/Ventanilla_ObtenerUno", ReplyAction="http://tempuri.org/IVentanillaService/Ventanilla_ObtenerUnoResponse")]
        Modelos.Modelos.VentanillaModel Ventanilla_ObtenerUno(int aID_VentanillaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentanillaService/Ventanilla_ObtenerUno", ReplyAction="http://tempuri.org/IVentanillaService/Ventanilla_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.VentanillaModel> Ventanilla_ObtenerUnoAsync(int aID_VentanillaModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentanillaService/Ventanilla_ObtenerUnoXusuario", ReplyAction="http://tempuri.org/IVentanillaService/Ventanilla_ObtenerUnoXusuarioResponse")]
        Modelos.Modelos.VentanillaModel Ventanilla_ObtenerUnoXusuario(int Id_Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentanillaService/Ventanilla_ObtenerUnoXusuario", ReplyAction="http://tempuri.org/IVentanillaService/Ventanilla_ObtenerUnoXusuarioResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.VentanillaModel> Ventanilla_ObtenerUnoXusuarioAsync(int Id_Usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentanillaService/Ventanilla_ObtenerTodos", ReplyAction="http://tempuri.org/IVentanillaService/Ventanilla_ObtenerTodosResponse")]
        Modelos.Modelos.VentanillaModel[] Ventanilla_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentanillaService/Ventanilla_ObtenerTodos", ReplyAction="http://tempuri.org/IVentanillaService/Ventanilla_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.VentanillaModel[]> Ventanilla_ObtenerTodosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentanillaService/GetVentanillasXSucursal", ReplyAction="http://tempuri.org/IVentanillaService/GetVentanillasXSucursalResponse")]
        Modelos.Modelos.VentanillaModel[] GetVentanillasXSucursal(int Idsucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentanillaService/GetVentanillasXSucursal", ReplyAction="http://tempuri.org/IVentanillaService/GetVentanillasXSucursalResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.VentanillaModel[]> GetVentanillasXSucursalAsync(int Idsucursal);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVentanillaServiceChannel : Sistema_Bancario.WsSistemaBancario.IVentanillaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VentanillaServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.IVentanillaService>, Sistema_Bancario.WsSistemaBancario.IVentanillaService {
        
        public VentanillaServiceClient() {
        }
        
        public VentanillaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VentanillaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VentanillaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VentanillaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Ventanilla_Crear(Modelos.Modelos.VentanillaModel aVentanilla) {
            return base.Channel.Ventanilla_Crear(aVentanilla);
        }
        
        public System.Threading.Tasks.Task<bool> Ventanilla_CrearAsync(Modelos.Modelos.VentanillaModel aVentanilla) {
            return base.Channel.Ventanilla_CrearAsync(aVentanilla);
        }
        
        public bool Ventanilla_Editar(Modelos.Modelos.VentanillaModel aVentanilla) {
            return base.Channel.Ventanilla_Editar(aVentanilla);
        }
        
        public System.Threading.Tasks.Task<bool> Ventanilla_EditarAsync(Modelos.Modelos.VentanillaModel aVentanilla) {
            return base.Channel.Ventanilla_EditarAsync(aVentanilla);
        }
        
        public bool Ventanilla_Eliminar(int aID_VentanillaModel) {
            return base.Channel.Ventanilla_Eliminar(aID_VentanillaModel);
        }
        
        public System.Threading.Tasks.Task<bool> Ventanilla_EliminarAsync(int aID_VentanillaModel) {
            return base.Channel.Ventanilla_EliminarAsync(aID_VentanillaModel);
        }
        
        public Modelos.Modelos.VentanillaModel Ventanilla_ObtenerUno(int aID_VentanillaModel) {
            return base.Channel.Ventanilla_ObtenerUno(aID_VentanillaModel);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.VentanillaModel> Ventanilla_ObtenerUnoAsync(int aID_VentanillaModel) {
            return base.Channel.Ventanilla_ObtenerUnoAsync(aID_VentanillaModel);
        }
        
        public Modelos.Modelos.VentanillaModel Ventanilla_ObtenerUnoXusuario(int Id_Usuario) {
            return base.Channel.Ventanilla_ObtenerUnoXusuario(Id_Usuario);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.VentanillaModel> Ventanilla_ObtenerUnoXusuarioAsync(int Id_Usuario) {
            return base.Channel.Ventanilla_ObtenerUnoXusuarioAsync(Id_Usuario);
        }
        
        public Modelos.Modelos.VentanillaModel[] Ventanilla_ObtenerTodos() {
            return base.Channel.Ventanilla_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.VentanillaModel[]> Ventanilla_ObtenerTodosAsync() {
            return base.Channel.Ventanilla_ObtenerTodosAsync();
        }
        
        public Modelos.Modelos.VentanillaModel[] GetVentanillasXSucursal(int Idsucursal) {
            return base.Channel.GetVentanillasXSucursal(Idsucursal);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.VentanillaModel[]> GetVentanillasXSucursalAsync(int Idsucursal) {
            return base.Channel.GetVentanillasXSucursalAsync(Idsucursal);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.IBancoService")]
    public interface IBancoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBancoService/Banco_Crear", ReplyAction="http://tempuri.org/IBancoService/Banco_CrearResponse")]
        bool Banco_Crear(Modelos.Modelos.BancoModel aBanco);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBancoService/Banco_Crear", ReplyAction="http://tempuri.org/IBancoService/Banco_CrearResponse")]
        System.Threading.Tasks.Task<bool> Banco_CrearAsync(Modelos.Modelos.BancoModel aBanco);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBancoService/Banco_Editar", ReplyAction="http://tempuri.org/IBancoService/Banco_EditarResponse")]
        bool Banco_Editar(Modelos.Modelos.BancoModel aBanco);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBancoService/Banco_Editar", ReplyAction="http://tempuri.org/IBancoService/Banco_EditarResponse")]
        System.Threading.Tasks.Task<bool> Banco_EditarAsync(Modelos.Modelos.BancoModel aBanco);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBancoService/Banco_Eliminar", ReplyAction="http://tempuri.org/IBancoService/Banco_EliminarResponse")]
        bool Banco_Eliminar(int aID_Banco);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBancoService/Banco_Eliminar", ReplyAction="http://tempuri.org/IBancoService/Banco_EliminarResponse")]
        System.Threading.Tasks.Task<bool> Banco_EliminarAsync(int aID_Banco);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBancoService/Banco_ObtenerUno", ReplyAction="http://tempuri.org/IBancoService/Banco_ObtenerUnoResponse")]
        Modelos.Modelos.BancoModel Banco_ObtenerUno(int aID_Banco);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBancoService/Banco_ObtenerUno", ReplyAction="http://tempuri.org/IBancoService/Banco_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.BancoModel> Banco_ObtenerUnoAsync(int aID_Banco);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBancoService/Banco_ObtenerTodos", ReplyAction="http://tempuri.org/IBancoService/Banco_ObtenerTodosResponse")]
        Modelos.Modelos.BancoModel[] Banco_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBancoService/Banco_ObtenerTodos", ReplyAction="http://tempuri.org/IBancoService/Banco_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.BancoModel[]> Banco_ObtenerTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBancoServiceChannel : Sistema_Bancario.WsSistemaBancario.IBancoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BancoServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.IBancoService>, Sistema_Bancario.WsSistemaBancario.IBancoService {
        
        public BancoServiceClient() {
        }
        
        public BancoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BancoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BancoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BancoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Banco_Crear(Modelos.Modelos.BancoModel aBanco) {
            return base.Channel.Banco_Crear(aBanco);
        }
        
        public System.Threading.Tasks.Task<bool> Banco_CrearAsync(Modelos.Modelos.BancoModel aBanco) {
            return base.Channel.Banco_CrearAsync(aBanco);
        }
        
        public bool Banco_Editar(Modelos.Modelos.BancoModel aBanco) {
            return base.Channel.Banco_Editar(aBanco);
        }
        
        public System.Threading.Tasks.Task<bool> Banco_EditarAsync(Modelos.Modelos.BancoModel aBanco) {
            return base.Channel.Banco_EditarAsync(aBanco);
        }
        
        public bool Banco_Eliminar(int aID_Banco) {
            return base.Channel.Banco_Eliminar(aID_Banco);
        }
        
        public System.Threading.Tasks.Task<bool> Banco_EliminarAsync(int aID_Banco) {
            return base.Channel.Banco_EliminarAsync(aID_Banco);
        }
        
        public Modelos.Modelos.BancoModel Banco_ObtenerUno(int aID_Banco) {
            return base.Channel.Banco_ObtenerUno(aID_Banco);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.BancoModel> Banco_ObtenerUnoAsync(int aID_Banco) {
            return base.Channel.Banco_ObtenerUnoAsync(aID_Banco);
        }
        
        public Modelos.Modelos.BancoModel[] Banco_ObtenerTodos() {
            return base.Channel.Banco_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.BancoModel[]> Banco_ObtenerTodosAsync() {
            return base.Channel.Banco_ObtenerTodosAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.IComponenteService")]
    public interface IComponenteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComponenteService/Componente_Crear", ReplyAction="http://tempuri.org/IComponenteService/Componente_CrearResponse")]
        bool Componente_Crear(Modelos.Modelos.ComponenteModel aComponente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComponenteService/Componente_Crear", ReplyAction="http://tempuri.org/IComponenteService/Componente_CrearResponse")]
        System.Threading.Tasks.Task<bool> Componente_CrearAsync(Modelos.Modelos.ComponenteModel aComponente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComponenteService/Componente_Editar", ReplyAction="http://tempuri.org/IComponenteService/Componente_EditarResponse")]
        bool Componente_Editar(Modelos.Modelos.ComponenteModel aComponente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComponenteService/Componente_Editar", ReplyAction="http://tempuri.org/IComponenteService/Componente_EditarResponse")]
        System.Threading.Tasks.Task<bool> Componente_EditarAsync(Modelos.Modelos.ComponenteModel aComponente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComponenteService/Componente_Eliminar", ReplyAction="http://tempuri.org/IComponenteService/Componente_EliminarResponse")]
        bool Componente_Eliminar(int aID_Componente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComponenteService/Componente_Eliminar", ReplyAction="http://tempuri.org/IComponenteService/Componente_EliminarResponse")]
        System.Threading.Tasks.Task<bool> Componente_EliminarAsync(int aID_Componente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComponenteService/Componente_ObtenerUno", ReplyAction="http://tempuri.org/IComponenteService/Componente_ObtenerUnoResponse")]
        Modelos.Modelos.ComponenteModel Componente_ObtenerUno(int aID_Componente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComponenteService/Componente_ObtenerUno", ReplyAction="http://tempuri.org/IComponenteService/Componente_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.ComponenteModel> Componente_ObtenerUnoAsync(int aID_Componente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComponenteService/Componente_ObtenerTodos", ReplyAction="http://tempuri.org/IComponenteService/Componente_ObtenerTodosResponse")]
        Modelos.Modelos.ComponenteModel[] Componente_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComponenteService/Componente_ObtenerTodos", ReplyAction="http://tempuri.org/IComponenteService/Componente_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.ComponenteModel[]> Componente_ObtenerTodosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComponenteService/Componente_ObtenerComponentesRol", ReplyAction="http://tempuri.org/IComponenteService/Componente_ObtenerComponentesRolResponse")]
        Modelos.Modelos.ComponenteModel[] Componente_ObtenerComponentesRol(int aID_Rol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComponenteService/Componente_ObtenerComponentesRol", ReplyAction="http://tempuri.org/IComponenteService/Componente_ObtenerComponentesRolResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.ComponenteModel[]> Componente_ObtenerComponentesRolAsync(int aID_Rol);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IComponenteServiceChannel : Sistema_Bancario.WsSistemaBancario.IComponenteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ComponenteServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.IComponenteService>, Sistema_Bancario.WsSistemaBancario.IComponenteService {
        
        public ComponenteServiceClient() {
        }
        
        public ComponenteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ComponenteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComponenteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComponenteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Componente_Crear(Modelos.Modelos.ComponenteModel aComponente) {
            return base.Channel.Componente_Crear(aComponente);
        }
        
        public System.Threading.Tasks.Task<bool> Componente_CrearAsync(Modelos.Modelos.ComponenteModel aComponente) {
            return base.Channel.Componente_CrearAsync(aComponente);
        }
        
        public bool Componente_Editar(Modelos.Modelos.ComponenteModel aComponente) {
            return base.Channel.Componente_Editar(aComponente);
        }
        
        public System.Threading.Tasks.Task<bool> Componente_EditarAsync(Modelos.Modelos.ComponenteModel aComponente) {
            return base.Channel.Componente_EditarAsync(aComponente);
        }
        
        public bool Componente_Eliminar(int aID_Componente) {
            return base.Channel.Componente_Eliminar(aID_Componente);
        }
        
        public System.Threading.Tasks.Task<bool> Componente_EliminarAsync(int aID_Componente) {
            return base.Channel.Componente_EliminarAsync(aID_Componente);
        }
        
        public Modelos.Modelos.ComponenteModel Componente_ObtenerUno(int aID_Componente) {
            return base.Channel.Componente_ObtenerUno(aID_Componente);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.ComponenteModel> Componente_ObtenerUnoAsync(int aID_Componente) {
            return base.Channel.Componente_ObtenerUnoAsync(aID_Componente);
        }
        
        public Modelos.Modelos.ComponenteModel[] Componente_ObtenerTodos() {
            return base.Channel.Componente_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.ComponenteModel[]> Componente_ObtenerTodosAsync() {
            return base.Channel.Componente_ObtenerTodosAsync();
        }
        
        public Modelos.Modelos.ComponenteModel[] Componente_ObtenerComponentesRol(int aID_Rol) {
            return base.Channel.Componente_ObtenerComponentesRol(aID_Rol);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.ComponenteModel[]> Componente_ObtenerComponentesRolAsync(int aID_Rol) {
            return base.Channel.Componente_ObtenerComponentesRolAsync(aID_Rol);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.IHorariosAtencionService")]
    public interface IHorariosAtencionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_Crear", ReplyAction="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_CrearResponse")]
        bool HorariosAtencion_Crear(Modelos.Modelos.HorariosAtencionModel aHorariosAtencion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_Crear", ReplyAction="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_CrearResponse")]
        System.Threading.Tasks.Task<bool> HorariosAtencion_CrearAsync(Modelos.Modelos.HorariosAtencionModel aHorariosAtencion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_Editar", ReplyAction="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_EditarResponse")]
        bool HorariosAtencion_Editar(Modelos.Modelos.HorariosAtencionModel aHorariosAtencion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_Editar", ReplyAction="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_EditarResponse")]
        System.Threading.Tasks.Task<bool> HorariosAtencion_EditarAsync(Modelos.Modelos.HorariosAtencionModel aHorariosAtencion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_Eliminar", ReplyAction="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_EliminarResponse")]
        bool HorariosAtencion_Eliminar(int aID_HorariosAtencion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_Eliminar", ReplyAction="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_EliminarResponse")]
        System.Threading.Tasks.Task<bool> HorariosAtencion_EliminarAsync(int aID_HorariosAtencion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_ObtenerUno", ReplyAction="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_ObtenerUnoResponse")]
        Modelos.Modelos.HorariosAtencionModel HorariosAtencion_ObtenerUno(int aID_HorariosAtencion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_ObtenerUno", ReplyAction="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.HorariosAtencionModel> HorariosAtencion_ObtenerUnoAsync(int aID_HorariosAtencion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_ObtenerTodos", ReplyAction="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_ObtenerTodosResponse" +
            "")]
        Modelos.Modelos.HorariosAtencionModel[] HorariosAtencion_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_ObtenerTodos", ReplyAction="http://tempuri.org/IHorariosAtencionService/HorariosAtencion_ObtenerTodosResponse" +
            "")]
        System.Threading.Tasks.Task<Modelos.Modelos.HorariosAtencionModel[]> HorariosAtencion_ObtenerTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHorariosAtencionServiceChannel : Sistema_Bancario.WsSistemaBancario.IHorariosAtencionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HorariosAtencionServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.IHorariosAtencionService>, Sistema_Bancario.WsSistemaBancario.IHorariosAtencionService {
        
        public HorariosAtencionServiceClient() {
        }
        
        public HorariosAtencionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HorariosAtencionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HorariosAtencionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HorariosAtencionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool HorariosAtencion_Crear(Modelos.Modelos.HorariosAtencionModel aHorariosAtencion) {
            return base.Channel.HorariosAtencion_Crear(aHorariosAtencion);
        }
        
        public System.Threading.Tasks.Task<bool> HorariosAtencion_CrearAsync(Modelos.Modelos.HorariosAtencionModel aHorariosAtencion) {
            return base.Channel.HorariosAtencion_CrearAsync(aHorariosAtencion);
        }
        
        public bool HorariosAtencion_Editar(Modelos.Modelos.HorariosAtencionModel aHorariosAtencion) {
            return base.Channel.HorariosAtencion_Editar(aHorariosAtencion);
        }
        
        public System.Threading.Tasks.Task<bool> HorariosAtencion_EditarAsync(Modelos.Modelos.HorariosAtencionModel aHorariosAtencion) {
            return base.Channel.HorariosAtencion_EditarAsync(aHorariosAtencion);
        }
        
        public bool HorariosAtencion_Eliminar(int aID_HorariosAtencion) {
            return base.Channel.HorariosAtencion_Eliminar(aID_HorariosAtencion);
        }
        
        public System.Threading.Tasks.Task<bool> HorariosAtencion_EliminarAsync(int aID_HorariosAtencion) {
            return base.Channel.HorariosAtencion_EliminarAsync(aID_HorariosAtencion);
        }
        
        public Modelos.Modelos.HorariosAtencionModel HorariosAtencion_ObtenerUno(int aID_HorariosAtencion) {
            return base.Channel.HorariosAtencion_ObtenerUno(aID_HorariosAtencion);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.HorariosAtencionModel> HorariosAtencion_ObtenerUnoAsync(int aID_HorariosAtencion) {
            return base.Channel.HorariosAtencion_ObtenerUnoAsync(aID_HorariosAtencion);
        }
        
        public Modelos.Modelos.HorariosAtencionModel[] HorariosAtencion_ObtenerTodos() {
            return base.Channel.HorariosAtencion_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.HorariosAtencionModel[]> HorariosAtencion_ObtenerTodosAsync() {
            return base.Channel.HorariosAtencion_ObtenerTodosAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.IPermisosUsuarioService")]
    public interface IPermisosUsuarioService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_Crear", ReplyAction="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_CrearResponse")]
        bool PermisosUsuario_Crear(Modelos.Modelos.PermisosUsuarioModel aPermisosUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_Crear", ReplyAction="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_CrearResponse")]
        System.Threading.Tasks.Task<bool> PermisosUsuario_CrearAsync(Modelos.Modelos.PermisosUsuarioModel aPermisosUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_Editar", ReplyAction="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_EditarResponse")]
        bool PermisosUsuario_Editar(Modelos.Modelos.PermisosUsuarioModel aPermisosUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_Editar", ReplyAction="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_EditarResponse")]
        System.Threading.Tasks.Task<bool> PermisosUsuario_EditarAsync(Modelos.Modelos.PermisosUsuarioModel aPermisosUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_Eliminar", ReplyAction="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_EliminarResponse")]
        bool PermisosUsuario_Eliminar(int aID_PermisosUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_Eliminar", ReplyAction="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_EliminarResponse")]
        System.Threading.Tasks.Task<bool> PermisosUsuario_EliminarAsync(int aID_PermisosUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_ObtenerUno", ReplyAction="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_ObtenerUnoResponse")]
        Modelos.Modelos.PermisosUsuarioModel PermisosUsuario_ObtenerUno(int aID_PermisosUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_ObtenerUno", ReplyAction="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.PermisosUsuarioModel> PermisosUsuario_ObtenerUnoAsync(int aID_PermisosUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_ObtenerTodos", ReplyAction="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_ObtenerTodosResponse")]
        Modelos.Modelos.PermisosUsuarioModel[] PermisosUsuario_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_ObtenerTodos", ReplyAction="http://tempuri.org/IPermisosUsuarioService/PermisosUsuario_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.PermisosUsuarioModel[]> PermisosUsuario_ObtenerTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPermisosUsuarioServiceChannel : Sistema_Bancario.WsSistemaBancario.IPermisosUsuarioService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PermisosUsuarioServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.IPermisosUsuarioService>, Sistema_Bancario.WsSistemaBancario.IPermisosUsuarioService {
        
        public PermisosUsuarioServiceClient() {
        }
        
        public PermisosUsuarioServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PermisosUsuarioServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PermisosUsuarioServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PermisosUsuarioServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool PermisosUsuario_Crear(Modelos.Modelos.PermisosUsuarioModel aPermisosUsuario) {
            return base.Channel.PermisosUsuario_Crear(aPermisosUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> PermisosUsuario_CrearAsync(Modelos.Modelos.PermisosUsuarioModel aPermisosUsuario) {
            return base.Channel.PermisosUsuario_CrearAsync(aPermisosUsuario);
        }
        
        public bool PermisosUsuario_Editar(Modelos.Modelos.PermisosUsuarioModel aPermisosUsuario) {
            return base.Channel.PermisosUsuario_Editar(aPermisosUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> PermisosUsuario_EditarAsync(Modelos.Modelos.PermisosUsuarioModel aPermisosUsuario) {
            return base.Channel.PermisosUsuario_EditarAsync(aPermisosUsuario);
        }
        
        public bool PermisosUsuario_Eliminar(int aID_PermisosUsuario) {
            return base.Channel.PermisosUsuario_Eliminar(aID_PermisosUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> PermisosUsuario_EliminarAsync(int aID_PermisosUsuario) {
            return base.Channel.PermisosUsuario_EliminarAsync(aID_PermisosUsuario);
        }
        
        public Modelos.Modelos.PermisosUsuarioModel PermisosUsuario_ObtenerUno(int aID_PermisosUsuario) {
            return base.Channel.PermisosUsuario_ObtenerUno(aID_PermisosUsuario);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.PermisosUsuarioModel> PermisosUsuario_ObtenerUnoAsync(int aID_PermisosUsuario) {
            return base.Channel.PermisosUsuario_ObtenerUnoAsync(aID_PermisosUsuario);
        }
        
        public Modelos.Modelos.PermisosUsuarioModel[] PermisosUsuario_ObtenerTodos() {
            return base.Channel.PermisosUsuario_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.PermisosUsuarioModel[]> PermisosUsuario_ObtenerTodosAsync() {
            return base.Channel.PermisosUsuario_ObtenerTodosAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.IPersonaService")]
    public interface IPersonaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_Crear", ReplyAction="http://tempuri.org/IPersonaService/Persona_CrearResponse")]
        bool Persona_Crear(Modelos.Modelos.PersonaModel aPersona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_Crear", ReplyAction="http://tempuri.org/IPersonaService/Persona_CrearResponse")]
        System.Threading.Tasks.Task<bool> Persona_CrearAsync(Modelos.Modelos.PersonaModel aPersona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_Editar", ReplyAction="http://tempuri.org/IPersonaService/Persona_EditarResponse")]
        bool Persona_Editar(Modelos.Modelos.PersonaModel aPersona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_Editar", ReplyAction="http://tempuri.org/IPersonaService/Persona_EditarResponse")]
        System.Threading.Tasks.Task<bool> Persona_EditarAsync(Modelos.Modelos.PersonaModel aPersona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_Eliminar", ReplyAction="http://tempuri.org/IPersonaService/Persona_EliminarResponse")]
        bool Persona_Eliminar(int aID_Persona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_Eliminar", ReplyAction="http://tempuri.org/IPersonaService/Persona_EliminarResponse")]
        System.Threading.Tasks.Task<bool> Persona_EliminarAsync(int aID_Persona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_ObtenerUno", ReplyAction="http://tempuri.org/IPersonaService/Persona_ObtenerUnoResponse")]
        Modelos.Modelos.PersonaModel Persona_ObtenerUno(int aID_Persona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_ObtenerUno", ReplyAction="http://tempuri.org/IPersonaService/Persona_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.PersonaModel> Persona_ObtenerUnoAsync(int aID_Persona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_ObtenerTodos", ReplyAction="http://tempuri.org/IPersonaService/Persona_ObtenerTodosResponse")]
        Modelos.Modelos.PersonaModel[] Persona_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_ObtenerTodos", ReplyAction="http://tempuri.org/IPersonaService/Persona_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.PersonaModel[]> Persona_ObtenerTodosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_ValidarUsuario", ReplyAction="http://tempuri.org/IPersonaService/Persona_ValidarUsuarioResponse")]
        Modelos.Modelos.PersonaModel Persona_ValidarUsuario(string aUsuario, string aContraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_ValidarUsuario", ReplyAction="http://tempuri.org/IPersonaService/Persona_ValidarUsuarioResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.PersonaModel> Persona_ValidarUsuarioAsync(string aUsuario, string aContraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_CambiarContraseña", ReplyAction="http://tempuri.org/IPersonaService/Persona_CambiarContraseñaResponse")]
        bool Persona_CambiarContraseña(string aUsuario, string aPassword, string aNewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_CambiarContraseña", ReplyAction="http://tempuri.org/IPersonaService/Persona_CambiarContraseñaResponse")]
        System.Threading.Tasks.Task<bool> Persona_CambiarContraseñaAsync(string aUsuario, string aPassword, string aNewPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_ObtenerSucursal", ReplyAction="http://tempuri.org/IPersonaService/Persona_ObtenerSucursalResponse")]
        Modelos.Modelos.SucursalModel Persona_ObtenerSucursal(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_ObtenerSucursal", ReplyAction="http://tempuri.org/IPersonaService/Persona_ObtenerSucursalResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.SucursalModel> Persona_ObtenerSucursalAsync(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_GetComponentes", ReplyAction="http://tempuri.org/IPersonaService/Persona_GetComponentesResponse")]
        Modelos.Modelos.ComponenteModel[] Persona_GetComponentes(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_GetComponentes", ReplyAction="http://tempuri.org/IPersonaService/Persona_GetComponentesResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.ComponenteModel[]> Persona_GetComponentesAsync(int idUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_GetRolesUsuario", ReplyAction="http://tempuri.org/IPersonaService/Persona_GetRolesUsuarioResponse")]
        Modelos.Modelos.RolesModel[] Persona_GetRolesUsuario(string aUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_GetRolesUsuario", ReplyAction="http://tempuri.org/IPersonaService/Persona_GetRolesUsuarioResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.RolesModel[]> Persona_GetRolesUsuarioAsync(string aUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/GetPersonasPorRol", ReplyAction="http://tempuri.org/IPersonaService/GetPersonasPorRolResponse")]
        Modelos.Modelos.PersonaModel[] GetPersonasPorRol(int idRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/GetPersonasPorRol", ReplyAction="http://tempuri.org/IPersonaService/GetPersonasPorRolResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.PersonaModel[]> GetPersonasPorRolAsync(int idRol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_GetPersonaNombreApellidos", ReplyAction="http://tempuri.org/IPersonaService/Persona_GetPersonaNombreApellidosResponse")]
        Modelos.Modelos.PersonaModel[] Persona_GetPersonaNombreApellidos(string nombre, string apellido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_GetPersonaNombreApellidos", ReplyAction="http://tempuri.org/IPersonaService/Persona_GetPersonaNombreApellidosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.PersonaModel[]> Persona_GetPersonaNombreApellidosAsync(string nombre, string apellido);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_CrearNuevoUsuario", ReplyAction="http://tempuri.org/IPersonaService/Persona_CrearNuevoUsuarioResponse")]
        bool Persona_CrearNuevoUsuario(int idPersona, string Usuario, string Contraseña, bool Estado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonaService/Persona_CrearNuevoUsuario", ReplyAction="http://tempuri.org/IPersonaService/Persona_CrearNuevoUsuarioResponse")]
        System.Threading.Tasks.Task<bool> Persona_CrearNuevoUsuarioAsync(int idPersona, string Usuario, string Contraseña, bool Estado);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersonaServiceChannel : Sistema_Bancario.WsSistemaBancario.IPersonaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersonaServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.IPersonaService>, Sistema_Bancario.WsSistemaBancario.IPersonaService {
        
        public PersonaServiceClient() {
        }
        
        public PersonaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersonaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Persona_Crear(Modelos.Modelos.PersonaModel aPersona) {
            return base.Channel.Persona_Crear(aPersona);
        }
        
        public System.Threading.Tasks.Task<bool> Persona_CrearAsync(Modelos.Modelos.PersonaModel aPersona) {
            return base.Channel.Persona_CrearAsync(aPersona);
        }
        
        public bool Persona_Editar(Modelos.Modelos.PersonaModel aPersona) {
            return base.Channel.Persona_Editar(aPersona);
        }
        
        public System.Threading.Tasks.Task<bool> Persona_EditarAsync(Modelos.Modelos.PersonaModel aPersona) {
            return base.Channel.Persona_EditarAsync(aPersona);
        }
        
        public bool Persona_Eliminar(int aID_Persona) {
            return base.Channel.Persona_Eliminar(aID_Persona);
        }
        
        public System.Threading.Tasks.Task<bool> Persona_EliminarAsync(int aID_Persona) {
            return base.Channel.Persona_EliminarAsync(aID_Persona);
        }
        
        public Modelos.Modelos.PersonaModel Persona_ObtenerUno(int aID_Persona) {
            return base.Channel.Persona_ObtenerUno(aID_Persona);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.PersonaModel> Persona_ObtenerUnoAsync(int aID_Persona) {
            return base.Channel.Persona_ObtenerUnoAsync(aID_Persona);
        }
        
        public Modelos.Modelos.PersonaModel[] Persona_ObtenerTodos() {
            return base.Channel.Persona_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.PersonaModel[]> Persona_ObtenerTodosAsync() {
            return base.Channel.Persona_ObtenerTodosAsync();
        }
        
        public Modelos.Modelos.PersonaModel Persona_ValidarUsuario(string aUsuario, string aContraseña) {
            return base.Channel.Persona_ValidarUsuario(aUsuario, aContraseña);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.PersonaModel> Persona_ValidarUsuarioAsync(string aUsuario, string aContraseña) {
            return base.Channel.Persona_ValidarUsuarioAsync(aUsuario, aContraseña);
        }
        
        public bool Persona_CambiarContraseña(string aUsuario, string aPassword, string aNewPassword) {
            return base.Channel.Persona_CambiarContraseña(aUsuario, aPassword, aNewPassword);
        }
        
        public System.Threading.Tasks.Task<bool> Persona_CambiarContraseñaAsync(string aUsuario, string aPassword, string aNewPassword) {
            return base.Channel.Persona_CambiarContraseñaAsync(aUsuario, aPassword, aNewPassword);
        }
        
        public Modelos.Modelos.SucursalModel Persona_ObtenerSucursal(int idUsuario) {
            return base.Channel.Persona_ObtenerSucursal(idUsuario);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.SucursalModel> Persona_ObtenerSucursalAsync(int idUsuario) {
            return base.Channel.Persona_ObtenerSucursalAsync(idUsuario);
        }
        
        public Modelos.Modelos.ComponenteModel[] Persona_GetComponentes(int idUsuario) {
            return base.Channel.Persona_GetComponentes(idUsuario);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.ComponenteModel[]> Persona_GetComponentesAsync(int idUsuario) {
            return base.Channel.Persona_GetComponentesAsync(idUsuario);
        }
        
        public Modelos.Modelos.RolesModel[] Persona_GetRolesUsuario(string aUsuario) {
            return base.Channel.Persona_GetRolesUsuario(aUsuario);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.RolesModel[]> Persona_GetRolesUsuarioAsync(string aUsuario) {
            return base.Channel.Persona_GetRolesUsuarioAsync(aUsuario);
        }
        
        public Modelos.Modelos.PersonaModel[] GetPersonasPorRol(int idRol) {
            return base.Channel.GetPersonasPorRol(idRol);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.PersonaModel[]> GetPersonasPorRolAsync(int idRol) {
            return base.Channel.GetPersonasPorRolAsync(idRol);
        }
        
        public Modelos.Modelos.PersonaModel[] Persona_GetPersonaNombreApellidos(string nombre, string apellido) {
            return base.Channel.Persona_GetPersonaNombreApellidos(nombre, apellido);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.PersonaModel[]> Persona_GetPersonaNombreApellidosAsync(string nombre, string apellido) {
            return base.Channel.Persona_GetPersonaNombreApellidosAsync(nombre, apellido);
        }
        
        public bool Persona_CrearNuevoUsuario(int idPersona, string Usuario, string Contraseña, bool Estado) {
            return base.Channel.Persona_CrearNuevoUsuario(idPersona, Usuario, Contraseña, Estado);
        }
        
        public System.Threading.Tasks.Task<bool> Persona_CrearNuevoUsuarioAsync(int idPersona, string Usuario, string Contraseña, bool Estado) {
            return base.Channel.Persona_CrearNuevoUsuarioAsync(idPersona, Usuario, Contraseña, Estado);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.IRolesService")]
    public interface IRolesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/Roles_Crear", ReplyAction="http://tempuri.org/IRolesService/Roles_CrearResponse")]
        bool Roles_Crear(Modelos.Modelos.RolesModel aRoles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/Roles_Crear", ReplyAction="http://tempuri.org/IRolesService/Roles_CrearResponse")]
        System.Threading.Tasks.Task<bool> Roles_CrearAsync(Modelos.Modelos.RolesModel aRoles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/Roles_Editar", ReplyAction="http://tempuri.org/IRolesService/Roles_EditarResponse")]
        bool Roles_Editar(Modelos.Modelos.RolesModel aRoles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/Roles_Editar", ReplyAction="http://tempuri.org/IRolesService/Roles_EditarResponse")]
        System.Threading.Tasks.Task<bool> Roles_EditarAsync(Modelos.Modelos.RolesModel aRoles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/Roles_Eliminar", ReplyAction="http://tempuri.org/IRolesService/Roles_EliminarResponse")]
        bool Roles_Eliminar(int aID_Roles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/Roles_Eliminar", ReplyAction="http://tempuri.org/IRolesService/Roles_EliminarResponse")]
        System.Threading.Tasks.Task<bool> Roles_EliminarAsync(int aID_Roles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/Roles_ObtenerUno", ReplyAction="http://tempuri.org/IRolesService/Roles_ObtenerUnoResponse")]
        Modelos.Modelos.RolesModel Roles_ObtenerUno(int aID_Roles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/Roles_ObtenerUno", ReplyAction="http://tempuri.org/IRolesService/Roles_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.RolesModel> Roles_ObtenerUnoAsync(int aID_Roles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/Roles_ObtenerTodos", ReplyAction="http://tempuri.org/IRolesService/Roles_ObtenerTodosResponse")]
        Modelos.Modelos.RolesModel[] Roles_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolesService/Roles_ObtenerTodos", ReplyAction="http://tempuri.org/IRolesService/Roles_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.RolesModel[]> Roles_ObtenerTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRolesServiceChannel : Sistema_Bancario.WsSistemaBancario.IRolesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RolesServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.IRolesService>, Sistema_Bancario.WsSistemaBancario.IRolesService {
        
        public RolesServiceClient() {
        }
        
        public RolesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RolesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RolesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RolesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Roles_Crear(Modelos.Modelos.RolesModel aRoles) {
            return base.Channel.Roles_Crear(aRoles);
        }
        
        public System.Threading.Tasks.Task<bool> Roles_CrearAsync(Modelos.Modelos.RolesModel aRoles) {
            return base.Channel.Roles_CrearAsync(aRoles);
        }
        
        public bool Roles_Editar(Modelos.Modelos.RolesModel aRoles) {
            return base.Channel.Roles_Editar(aRoles);
        }
        
        public System.Threading.Tasks.Task<bool> Roles_EditarAsync(Modelos.Modelos.RolesModel aRoles) {
            return base.Channel.Roles_EditarAsync(aRoles);
        }
        
        public bool Roles_Eliminar(int aID_Roles) {
            return base.Channel.Roles_Eliminar(aID_Roles);
        }
        
        public System.Threading.Tasks.Task<bool> Roles_EliminarAsync(int aID_Roles) {
            return base.Channel.Roles_EliminarAsync(aID_Roles);
        }
        
        public Modelos.Modelos.RolesModel Roles_ObtenerUno(int aID_Roles) {
            return base.Channel.Roles_ObtenerUno(aID_Roles);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.RolesModel> Roles_ObtenerUnoAsync(int aID_Roles) {
            return base.Channel.Roles_ObtenerUnoAsync(aID_Roles);
        }
        
        public Modelos.Modelos.RolesModel[] Roles_ObtenerTodos() {
            return base.Channel.Roles_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.RolesModel[]> Roles_ObtenerTodosAsync() {
            return base.Channel.Roles_ObtenerTodosAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.IRolUsuarioService")]
    public interface IRolUsuarioService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolUsuarioService/RolUsuario_Crear", ReplyAction="http://tempuri.org/IRolUsuarioService/RolUsuario_CrearResponse")]
        bool RolUsuario_Crear(Modelos.Modelos.RolUsuarioModel aRolUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolUsuarioService/RolUsuario_Crear", ReplyAction="http://tempuri.org/IRolUsuarioService/RolUsuario_CrearResponse")]
        System.Threading.Tasks.Task<bool> RolUsuario_CrearAsync(Modelos.Modelos.RolUsuarioModel aRolUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolUsuarioService/RolUsuario_Editar", ReplyAction="http://tempuri.org/IRolUsuarioService/RolUsuario_EditarResponse")]
        bool RolUsuario_Editar(Modelos.Modelos.RolUsuarioModel aRolUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolUsuarioService/RolUsuario_Editar", ReplyAction="http://tempuri.org/IRolUsuarioService/RolUsuario_EditarResponse")]
        System.Threading.Tasks.Task<bool> RolUsuario_EditarAsync(Modelos.Modelos.RolUsuarioModel aRolUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolUsuarioService/RolUsuario_Eliminar", ReplyAction="http://tempuri.org/IRolUsuarioService/RolUsuario_EliminarResponse")]
        bool RolUsuario_Eliminar(int aID_RolUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolUsuarioService/RolUsuario_Eliminar", ReplyAction="http://tempuri.org/IRolUsuarioService/RolUsuario_EliminarResponse")]
        System.Threading.Tasks.Task<bool> RolUsuario_EliminarAsync(int aID_RolUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolUsuarioService/RolUsuario_ObtenerUno", ReplyAction="http://tempuri.org/IRolUsuarioService/RolUsuario_ObtenerUnoResponse")]
        Modelos.Modelos.RolUsuarioModel RolUsuario_ObtenerUno(int aID_RolUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolUsuarioService/RolUsuario_ObtenerUno", ReplyAction="http://tempuri.org/IRolUsuarioService/RolUsuario_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.RolUsuarioModel> RolUsuario_ObtenerUnoAsync(int aID_RolUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolUsuarioService/RolUsuario_ObtenerTodos", ReplyAction="http://tempuri.org/IRolUsuarioService/RolUsuario_ObtenerTodosResponse")]
        Modelos.Modelos.RolUsuarioModel[] RolUsuario_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRolUsuarioService/RolUsuario_ObtenerTodos", ReplyAction="http://tempuri.org/IRolUsuarioService/RolUsuario_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.RolUsuarioModel[]> RolUsuario_ObtenerTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRolUsuarioServiceChannel : Sistema_Bancario.WsSistemaBancario.IRolUsuarioService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RolUsuarioServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.IRolUsuarioService>, Sistema_Bancario.WsSistemaBancario.IRolUsuarioService {
        
        public RolUsuarioServiceClient() {
        }
        
        public RolUsuarioServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RolUsuarioServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RolUsuarioServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RolUsuarioServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RolUsuario_Crear(Modelos.Modelos.RolUsuarioModel aRolUsuario) {
            return base.Channel.RolUsuario_Crear(aRolUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> RolUsuario_CrearAsync(Modelos.Modelos.RolUsuarioModel aRolUsuario) {
            return base.Channel.RolUsuario_CrearAsync(aRolUsuario);
        }
        
        public bool RolUsuario_Editar(Modelos.Modelos.RolUsuarioModel aRolUsuario) {
            return base.Channel.RolUsuario_Editar(aRolUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> RolUsuario_EditarAsync(Modelos.Modelos.RolUsuarioModel aRolUsuario) {
            return base.Channel.RolUsuario_EditarAsync(aRolUsuario);
        }
        
        public bool RolUsuario_Eliminar(int aID_RolUsuario) {
            return base.Channel.RolUsuario_Eliminar(aID_RolUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> RolUsuario_EliminarAsync(int aID_RolUsuario) {
            return base.Channel.RolUsuario_EliminarAsync(aID_RolUsuario);
        }
        
        public Modelos.Modelos.RolUsuarioModel RolUsuario_ObtenerUno(int aID_RolUsuario) {
            return base.Channel.RolUsuario_ObtenerUno(aID_RolUsuario);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.RolUsuarioModel> RolUsuario_ObtenerUnoAsync(int aID_RolUsuario) {
            return base.Channel.RolUsuario_ObtenerUnoAsync(aID_RolUsuario);
        }
        
        public Modelos.Modelos.RolUsuarioModel[] RolUsuario_ObtenerTodos() {
            return base.Channel.RolUsuario_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.RolUsuarioModel[]> RolUsuario_ObtenerTodosAsync() {
            return base.Channel.RolUsuario_ObtenerTodosAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.ISucursalService")]
    public interface ISucursalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISucursalService/Sucursal_Crear", ReplyAction="http://tempuri.org/ISucursalService/Sucursal_CrearResponse")]
        bool Sucursal_Crear(Modelos.Modelos.SucursalModel aSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISucursalService/Sucursal_Crear", ReplyAction="http://tempuri.org/ISucursalService/Sucursal_CrearResponse")]
        System.Threading.Tasks.Task<bool> Sucursal_CrearAsync(Modelos.Modelos.SucursalModel aSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISucursalService/Sucursal_Editar", ReplyAction="http://tempuri.org/ISucursalService/Sucursal_EditarResponse")]
        bool Sucursal_Editar(Modelos.Modelos.SucursalModel aSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISucursalService/Sucursal_Editar", ReplyAction="http://tempuri.org/ISucursalService/Sucursal_EditarResponse")]
        System.Threading.Tasks.Task<bool> Sucursal_EditarAsync(Modelos.Modelos.SucursalModel aSucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISucursalService/Sucursal_Eliminar", ReplyAction="http://tempuri.org/ISucursalService/Sucursal_EliminarResponse")]
        bool Sucursal_Eliminar(int aID_Sucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISucursalService/Sucursal_Eliminar", ReplyAction="http://tempuri.org/ISucursalService/Sucursal_EliminarResponse")]
        System.Threading.Tasks.Task<bool> Sucursal_EliminarAsync(int aID_Sucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISucursalService/Sucursal_ObtenerUno", ReplyAction="http://tempuri.org/ISucursalService/Sucursal_ObtenerUnoResponse")]
        Modelos.Modelos.SucursalModel Sucursal_ObtenerUno(int aID_Sucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISucursalService/Sucursal_ObtenerUno", ReplyAction="http://tempuri.org/ISucursalService/Sucursal_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.SucursalModel> Sucursal_ObtenerUnoAsync(int aID_Sucursal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISucursalService/Sucursal_ObtenerTodos", ReplyAction="http://tempuri.org/ISucursalService/Sucursal_ObtenerTodosResponse")]
        Modelos.Modelos.SucursalModel[] Sucursal_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISucursalService/Sucursal_ObtenerTodos", ReplyAction="http://tempuri.org/ISucursalService/Sucursal_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.SucursalModel[]> Sucursal_ObtenerTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISucursalServiceChannel : Sistema_Bancario.WsSistemaBancario.ISucursalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SucursalServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.ISucursalService>, Sistema_Bancario.WsSistemaBancario.ISucursalService {
        
        public SucursalServiceClient() {
        }
        
        public SucursalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SucursalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SucursalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SucursalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Sucursal_Crear(Modelos.Modelos.SucursalModel aSucursal) {
            return base.Channel.Sucursal_Crear(aSucursal);
        }
        
        public System.Threading.Tasks.Task<bool> Sucursal_CrearAsync(Modelos.Modelos.SucursalModel aSucursal) {
            return base.Channel.Sucursal_CrearAsync(aSucursal);
        }
        
        public bool Sucursal_Editar(Modelos.Modelos.SucursalModel aSucursal) {
            return base.Channel.Sucursal_Editar(aSucursal);
        }
        
        public System.Threading.Tasks.Task<bool> Sucursal_EditarAsync(Modelos.Modelos.SucursalModel aSucursal) {
            return base.Channel.Sucursal_EditarAsync(aSucursal);
        }
        
        public bool Sucursal_Eliminar(int aID_Sucursal) {
            return base.Channel.Sucursal_Eliminar(aID_Sucursal);
        }
        
        public System.Threading.Tasks.Task<bool> Sucursal_EliminarAsync(int aID_Sucursal) {
            return base.Channel.Sucursal_EliminarAsync(aID_Sucursal);
        }
        
        public Modelos.Modelos.SucursalModel Sucursal_ObtenerUno(int aID_Sucursal) {
            return base.Channel.Sucursal_ObtenerUno(aID_Sucursal);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.SucursalModel> Sucursal_ObtenerUnoAsync(int aID_Sucursal) {
            return base.Channel.Sucursal_ObtenerUnoAsync(aID_Sucursal);
        }
        
        public Modelos.Modelos.SucursalModel[] Sucursal_ObtenerTodos() {
            return base.Channel.Sucursal_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.SucursalModel[]> Sucursal_ObtenerTodosAsync() {
            return base.Channel.Sucursal_ObtenerTodosAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.ITipoDocumentoService")]
    public interface ITipoDocumentoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoDocumentoService/TipoDocumento_Crear", ReplyAction="http://tempuri.org/ITipoDocumentoService/TipoDocumento_CrearResponse")]
        bool TipoDocumento_Crear(Modelos.Modelos.TipoDocumentoModel aTipoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoDocumentoService/TipoDocumento_Crear", ReplyAction="http://tempuri.org/ITipoDocumentoService/TipoDocumento_CrearResponse")]
        System.Threading.Tasks.Task<bool> TipoDocumento_CrearAsync(Modelos.Modelos.TipoDocumentoModel aTipoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoDocumentoService/TipoDocumento_Editar", ReplyAction="http://tempuri.org/ITipoDocumentoService/TipoDocumento_EditarResponse")]
        bool TipoDocumento_Editar(Modelos.Modelos.TipoDocumentoModel aTipoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoDocumentoService/TipoDocumento_Editar", ReplyAction="http://tempuri.org/ITipoDocumentoService/TipoDocumento_EditarResponse")]
        System.Threading.Tasks.Task<bool> TipoDocumento_EditarAsync(Modelos.Modelos.TipoDocumentoModel aTipoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoDocumentoService/TipoDocumento_Eliminar", ReplyAction="http://tempuri.org/ITipoDocumentoService/TipoDocumento_EliminarResponse")]
        bool TipoDocumento_Eliminar(int aID_TipoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoDocumentoService/TipoDocumento_Eliminar", ReplyAction="http://tempuri.org/ITipoDocumentoService/TipoDocumento_EliminarResponse")]
        System.Threading.Tasks.Task<bool> TipoDocumento_EliminarAsync(int aID_TipoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoDocumentoService/TipoDocumento_ObtenerUno", ReplyAction="http://tempuri.org/ITipoDocumentoService/TipoDocumento_ObtenerUnoResponse")]
        Modelos.Modelos.TipoDocumentoModel TipoDocumento_ObtenerUno(int aID_TipoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoDocumentoService/TipoDocumento_ObtenerUno", ReplyAction="http://tempuri.org/ITipoDocumentoService/TipoDocumento_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.TipoDocumentoModel> TipoDocumento_ObtenerUnoAsync(int aID_TipoDocumento);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoDocumentoService/TipoDocumento_ObtenerTodos", ReplyAction="http://tempuri.org/ITipoDocumentoService/TipoDocumento_ObtenerTodosResponse")]
        Modelos.Modelos.TipoDocumentoModel[] TipoDocumento_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITipoDocumentoService/TipoDocumento_ObtenerTodos", ReplyAction="http://tempuri.org/ITipoDocumentoService/TipoDocumento_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.TipoDocumentoModel[]> TipoDocumento_ObtenerTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITipoDocumentoServiceChannel : Sistema_Bancario.WsSistemaBancario.ITipoDocumentoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TipoDocumentoServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.ITipoDocumentoService>, Sistema_Bancario.WsSistemaBancario.ITipoDocumentoService {
        
        public TipoDocumentoServiceClient() {
        }
        
        public TipoDocumentoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TipoDocumentoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TipoDocumentoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TipoDocumentoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool TipoDocumento_Crear(Modelos.Modelos.TipoDocumentoModel aTipoDocumento) {
            return base.Channel.TipoDocumento_Crear(aTipoDocumento);
        }
        
        public System.Threading.Tasks.Task<bool> TipoDocumento_CrearAsync(Modelos.Modelos.TipoDocumentoModel aTipoDocumento) {
            return base.Channel.TipoDocumento_CrearAsync(aTipoDocumento);
        }
        
        public bool TipoDocumento_Editar(Modelos.Modelos.TipoDocumentoModel aTipoDocumento) {
            return base.Channel.TipoDocumento_Editar(aTipoDocumento);
        }
        
        public System.Threading.Tasks.Task<bool> TipoDocumento_EditarAsync(Modelos.Modelos.TipoDocumentoModel aTipoDocumento) {
            return base.Channel.TipoDocumento_EditarAsync(aTipoDocumento);
        }
        
        public bool TipoDocumento_Eliminar(int aID_TipoDocumento) {
            return base.Channel.TipoDocumento_Eliminar(aID_TipoDocumento);
        }
        
        public System.Threading.Tasks.Task<bool> TipoDocumento_EliminarAsync(int aID_TipoDocumento) {
            return base.Channel.TipoDocumento_EliminarAsync(aID_TipoDocumento);
        }
        
        public Modelos.Modelos.TipoDocumentoModel TipoDocumento_ObtenerUno(int aID_TipoDocumento) {
            return base.Channel.TipoDocumento_ObtenerUno(aID_TipoDocumento);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.TipoDocumentoModel> TipoDocumento_ObtenerUnoAsync(int aID_TipoDocumento) {
            return base.Channel.TipoDocumento_ObtenerUnoAsync(aID_TipoDocumento);
        }
        
        public Modelos.Modelos.TipoDocumentoModel[] TipoDocumento_ObtenerTodos() {
            return base.Channel.TipoDocumento_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.TipoDocumentoModel[]> TipoDocumento_ObtenerTodosAsync() {
            return base.Channel.TipoDocumento_ObtenerTodosAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.ITurnosService")]
    public interface ITurnosService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnosService/Turnos_Crear", ReplyAction="http://tempuri.org/ITurnosService/Turnos_CrearResponse")]
        bool Turnos_Crear(Modelos.Modelos.TurnosModel aTurnos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnosService/Turnos_Crear", ReplyAction="http://tempuri.org/ITurnosService/Turnos_CrearResponse")]
        System.Threading.Tasks.Task<bool> Turnos_CrearAsync(Modelos.Modelos.TurnosModel aTurnos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnosService/Turnos_Editar", ReplyAction="http://tempuri.org/ITurnosService/Turnos_EditarResponse")]
        bool Turnos_Editar(Modelos.Modelos.TurnosModel aTurnos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnosService/Turnos_Editar", ReplyAction="http://tempuri.org/ITurnosService/Turnos_EditarResponse")]
        System.Threading.Tasks.Task<bool> Turnos_EditarAsync(Modelos.Modelos.TurnosModel aTurnos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnosService/Turnos_Eliminar", ReplyAction="http://tempuri.org/ITurnosService/Turnos_EliminarResponse")]
        bool Turnos_Eliminar(int aID_Turnos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnosService/Turnos_Eliminar", ReplyAction="http://tempuri.org/ITurnosService/Turnos_EliminarResponse")]
        System.Threading.Tasks.Task<bool> Turnos_EliminarAsync(int aID_Turnos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnosService/Turnos_ObtenerUno", ReplyAction="http://tempuri.org/ITurnosService/Turnos_ObtenerUnoResponse")]
        Modelos.Modelos.TurnosModel Turnos_ObtenerUno(int aID_Turnos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnosService/Turnos_ObtenerUno", ReplyAction="http://tempuri.org/ITurnosService/Turnos_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.TurnosModel> Turnos_ObtenerUnoAsync(int aID_Turnos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnosService/Turnos_ObtenerUnoXUsuario", ReplyAction="http://tempuri.org/ITurnosService/Turnos_ObtenerUnoXUsuarioResponse")]
        Modelos.Modelos.TurnosModel Turnos_ObtenerUnoXUsuario(int Id_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnosService/Turnos_ObtenerUnoXUsuario", ReplyAction="http://tempuri.org/ITurnosService/Turnos_ObtenerUnoXUsuarioResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.TurnosModel> Turnos_ObtenerUnoXUsuarioAsync(int Id_usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnosService/Turnos_ObtenerTodos", ReplyAction="http://tempuri.org/ITurnosService/Turnos_ObtenerTodosResponse")]
        Modelos.Modelos.TurnosModel[] Turnos_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnosService/Turnos_ObtenerTodos", ReplyAction="http://tempuri.org/ITurnosService/Turnos_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.TurnosModel[]> Turnos_ObtenerTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITurnosServiceChannel : Sistema_Bancario.WsSistemaBancario.ITurnosService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TurnosServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.ITurnosService>, Sistema_Bancario.WsSistemaBancario.ITurnosService {
        
        public TurnosServiceClient() {
        }
        
        public TurnosServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TurnosServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TurnosServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TurnosServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Turnos_Crear(Modelos.Modelos.TurnosModel aTurnos) {
            return base.Channel.Turnos_Crear(aTurnos);
        }
        
        public System.Threading.Tasks.Task<bool> Turnos_CrearAsync(Modelos.Modelos.TurnosModel aTurnos) {
            return base.Channel.Turnos_CrearAsync(aTurnos);
        }
        
        public bool Turnos_Editar(Modelos.Modelos.TurnosModel aTurnos) {
            return base.Channel.Turnos_Editar(aTurnos);
        }
        
        public System.Threading.Tasks.Task<bool> Turnos_EditarAsync(Modelos.Modelos.TurnosModel aTurnos) {
            return base.Channel.Turnos_EditarAsync(aTurnos);
        }
        
        public bool Turnos_Eliminar(int aID_Turnos) {
            return base.Channel.Turnos_Eliminar(aID_Turnos);
        }
        
        public System.Threading.Tasks.Task<bool> Turnos_EliminarAsync(int aID_Turnos) {
            return base.Channel.Turnos_EliminarAsync(aID_Turnos);
        }
        
        public Modelos.Modelos.TurnosModel Turnos_ObtenerUno(int aID_Turnos) {
            return base.Channel.Turnos_ObtenerUno(aID_Turnos);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.TurnosModel> Turnos_ObtenerUnoAsync(int aID_Turnos) {
            return base.Channel.Turnos_ObtenerUnoAsync(aID_Turnos);
        }
        
        public Modelos.Modelos.TurnosModel Turnos_ObtenerUnoXUsuario(int Id_usuario) {
            return base.Channel.Turnos_ObtenerUnoXUsuario(Id_usuario);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.TurnosModel> Turnos_ObtenerUnoXUsuarioAsync(int Id_usuario) {
            return base.Channel.Turnos_ObtenerUnoXUsuarioAsync(Id_usuario);
        }
        
        public Modelos.Modelos.TurnosModel[] Turnos_ObtenerTodos() {
            return base.Channel.Turnos_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.TurnosModel[]> Turnos_ObtenerTodosAsync() {
            return base.Channel.Turnos_ObtenerTodosAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.ITurnoUsuarioService")]
    public interface ITurnoUsuarioService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_Crear", ReplyAction="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_CrearResponse")]
        bool TurnoUsuario_Crear(Modelos.Modelos.TurnoUsuarioModel aTurnoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_Crear", ReplyAction="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_CrearResponse")]
        System.Threading.Tasks.Task<bool> TurnoUsuario_CrearAsync(Modelos.Modelos.TurnoUsuarioModel aTurnoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_Editar", ReplyAction="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_EditarResponse")]
        bool TurnoUsuario_Editar(Modelos.Modelos.TurnoUsuarioModel aTurnoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_Editar", ReplyAction="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_EditarResponse")]
        System.Threading.Tasks.Task<bool> TurnoUsuario_EditarAsync(Modelos.Modelos.TurnoUsuarioModel aTurnoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_Eliminar", ReplyAction="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_EliminarResponse")]
        bool TurnoUsuario_Eliminar(int aID_TurnoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_Eliminar", ReplyAction="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_EliminarResponse")]
        System.Threading.Tasks.Task<bool> TurnoUsuario_EliminarAsync(int aID_TurnoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_ObtenerUno", ReplyAction="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_ObtenerUnoResponse")]
        Modelos.Modelos.TurnoUsuarioModel TurnoUsuario_ObtenerUno(int aID_TurnoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_ObtenerUno", ReplyAction="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.TurnoUsuarioModel> TurnoUsuario_ObtenerUnoAsync(int aID_TurnoUsuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_ObtenerTodos", ReplyAction="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_ObtenerTodosResponse")]
        Modelos.Modelos.TurnoUsuarioModel[] TurnoUsuario_ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_ObtenerTodos", ReplyAction="http://tempuri.org/ITurnoUsuarioService/TurnoUsuario_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.TurnoUsuarioModel[]> TurnoUsuario_ObtenerTodosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITurnoUsuarioServiceChannel : Sistema_Bancario.WsSistemaBancario.ITurnoUsuarioService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TurnoUsuarioServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.ITurnoUsuarioService>, Sistema_Bancario.WsSistemaBancario.ITurnoUsuarioService {
        
        public TurnoUsuarioServiceClient() {
        }
        
        public TurnoUsuarioServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TurnoUsuarioServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TurnoUsuarioServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TurnoUsuarioServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool TurnoUsuario_Crear(Modelos.Modelos.TurnoUsuarioModel aTurnoUsuario) {
            return base.Channel.TurnoUsuario_Crear(aTurnoUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> TurnoUsuario_CrearAsync(Modelos.Modelos.TurnoUsuarioModel aTurnoUsuario) {
            return base.Channel.TurnoUsuario_CrearAsync(aTurnoUsuario);
        }
        
        public bool TurnoUsuario_Editar(Modelos.Modelos.TurnoUsuarioModel aTurnoUsuario) {
            return base.Channel.TurnoUsuario_Editar(aTurnoUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> TurnoUsuario_EditarAsync(Modelos.Modelos.TurnoUsuarioModel aTurnoUsuario) {
            return base.Channel.TurnoUsuario_EditarAsync(aTurnoUsuario);
        }
        
        public bool TurnoUsuario_Eliminar(int aID_TurnoUsuario) {
            return base.Channel.TurnoUsuario_Eliminar(aID_TurnoUsuario);
        }
        
        public System.Threading.Tasks.Task<bool> TurnoUsuario_EliminarAsync(int aID_TurnoUsuario) {
            return base.Channel.TurnoUsuario_EliminarAsync(aID_TurnoUsuario);
        }
        
        public Modelos.Modelos.TurnoUsuarioModel TurnoUsuario_ObtenerUno(int aID_TurnoUsuario) {
            return base.Channel.TurnoUsuario_ObtenerUno(aID_TurnoUsuario);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.TurnoUsuarioModel> TurnoUsuario_ObtenerUnoAsync(int aID_TurnoUsuario) {
            return base.Channel.TurnoUsuario_ObtenerUnoAsync(aID_TurnoUsuario);
        }
        
        public Modelos.Modelos.TurnoUsuarioModel[] TurnoUsuario_ObtenerTodos() {
            return base.Channel.TurnoUsuario_ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.TurnoUsuarioModel[]> TurnoUsuario_ObtenerTodosAsync() {
            return base.Channel.TurnoUsuario_ObtenerTodosAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsSistemaBancario.ICuentaService")]
    public interface ICuentaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaService/Cuenta_Crear", ReplyAction="http://tempuri.org/ICuentaService/Cuenta_CrearResponse")]
        bool Cuenta_Crear(Modelos.Modelos.CuentasModel aCuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaService/Cuenta_Crear", ReplyAction="http://tempuri.org/ICuentaService/Cuenta_CrearResponse")]
        System.Threading.Tasks.Task<bool> Cuenta_CrearAsync(Modelos.Modelos.CuentasModel aCuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaService/Cuenta_Editar", ReplyAction="http://tempuri.org/ICuentaService/Cuenta_EditarResponse")]
        bool Cuenta_Editar(Modelos.Modelos.CuentasModel aCuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaService/Cuenta_Editar", ReplyAction="http://tempuri.org/ICuentaService/Cuenta_EditarResponse")]
        System.Threading.Tasks.Task<bool> Cuenta_EditarAsync(Modelos.Modelos.CuentasModel aCuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaService/Cuenta_ObtenerUno", ReplyAction="http://tempuri.org/ICuentaService/Cuenta_ObtenerUnoResponse")]
        Modelos.Modelos.CuentasModel Cuenta_ObtenerUno(string aNro_Cuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaService/Cuenta_ObtenerUno", ReplyAction="http://tempuri.org/ICuentaService/Cuenta_ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.CuentasModel> Cuenta_ObtenerUnoAsync(string aNro_Cuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaService/Cuenta_ObtenerTodos", ReplyAction="http://tempuri.org/ICuentaService/Cuenta_ObtenerTodosResponse")]
        Modelos.Modelos.CuentasModel[] Cuenta_ObtenerTodos(int aID_Persona);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICuentaService/Cuenta_ObtenerTodos", ReplyAction="http://tempuri.org/ICuentaService/Cuenta_ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Modelos.Modelos.CuentasModel[]> Cuenta_ObtenerTodosAsync(int aID_Persona);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICuentaServiceChannel : Sistema_Bancario.WsSistemaBancario.ICuentaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CuentaServiceClient : System.ServiceModel.ClientBase<Sistema_Bancario.WsSistemaBancario.ICuentaService>, Sistema_Bancario.WsSistemaBancario.ICuentaService {
        
        public CuentaServiceClient() {
        }
        
        public CuentaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CuentaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CuentaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CuentaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Cuenta_Crear(Modelos.Modelos.CuentasModel aCuenta) {
            return base.Channel.Cuenta_Crear(aCuenta);
        }
        
        public System.Threading.Tasks.Task<bool> Cuenta_CrearAsync(Modelos.Modelos.CuentasModel aCuenta) {
            return base.Channel.Cuenta_CrearAsync(aCuenta);
        }
        
        public bool Cuenta_Editar(Modelos.Modelos.CuentasModel aCuenta) {
            return base.Channel.Cuenta_Editar(aCuenta);
        }
        
        public System.Threading.Tasks.Task<bool> Cuenta_EditarAsync(Modelos.Modelos.CuentasModel aCuenta) {
            return base.Channel.Cuenta_EditarAsync(aCuenta);
        }
        
        public Modelos.Modelos.CuentasModel Cuenta_ObtenerUno(string aNro_Cuenta) {
            return base.Channel.Cuenta_ObtenerUno(aNro_Cuenta);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.CuentasModel> Cuenta_ObtenerUnoAsync(string aNro_Cuenta) {
            return base.Channel.Cuenta_ObtenerUnoAsync(aNro_Cuenta);
        }
        
        public Modelos.Modelos.CuentasModel[] Cuenta_ObtenerTodos(int aID_Persona) {
            return base.Channel.Cuenta_ObtenerTodos(aID_Persona);
        }
        
        public System.Threading.Tasks.Task<Modelos.Modelos.CuentasModel[]> Cuenta_ObtenerTodosAsync(int aID_Persona) {
            return base.Channel.Cuenta_ObtenerTodosAsync(aID_Persona);
        }
    }
}

<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="stStatus.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>124, 22</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripStatusLabel9.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        w0wz75KXvKEAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="MoveFrom.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>23, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>91</value>
  </metadata>
</root>